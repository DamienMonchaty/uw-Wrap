#!/bin/bash

# üöÄ Script de d√©veloppement pour uW-Wrap
# Ce script facilite le d√©veloppement avec hot reload et monitoring

echo "üöÄ uW-Wrap Development Environment"
echo "================================="

# V√©rification des pr√©requis
check_dependencies() {
    echo "üîç V√©rification des d√©pendances..."
    
    if [ ! -d "node_modules" ]; then
        echo "üì¶ Installation des d√©pendances..."
        if command -v bun &> /dev/null; then
            bun install
        else
            npm install
        fi
    fi
    
    if [ ! -f ".env" ]; then
        echo "‚öôÔ∏è Fichier .env manquant. Utilisation des valeurs par d√©faut..."
        cat > .env << EOF
PORT=3001
USE_MYSQL=false
DB_FILE=./database_new.sqlite
JWT_SECRET=your-development-secret-key
NODE_ENV=development
EOF
    fi
}

# Menu interactif
show_menu() {
    echo ""
    echo "Choisissez une option :"
    echo "1) üöÄ D√©marrer avec Node.js (npm start)"
    echo "2) ‚ö° D√©marrer avec Bun (plus rapide)"
    echo "3) üëÄ Mode watch (auto-restart)"
    echo "4) üî® Build du projet"
    echo "5) üßπ Nettoyer le projet"
    echo "6) üìä Voir les logs"
    echo "7) üè• Health check"
    echo "8) ‚ùå Quitter"
    echo ""
    read -p "Votre choix (1-8): " choice
}

# Fonctions principales
start_node() {
    echo "üöÄ D√©marrage avec Node.js..."
    npm start
}

start_bun() {
    if command -v bun &> /dev/null; then
        echo "‚ö° D√©marrage avec Bun..."
        bun run example/server.ts
    else
        echo "‚ùå Bun non install√©. Utilisation de Node.js..."
        start_node
    fi
}

watch_mode() {
    if command -v bun &> /dev/null; then
        echo "üëÄ Mode watch avec Bun..."
        bun --watch example/server.ts
    else
        echo "üëÄ Mode watch avec Node.js..."
        npx nodemon example/server.ts
    fi
}

build_project() {
    echo "üî® Build du projet..."
    npm run build
    echo "‚úÖ Build termin√© !"
}

cleanup_project() {
    echo "üßπ Nettoyage du projet..."
    ./scripts/cleanup.sh
}

show_logs() {
    echo "üìä Derniers logs (appuyez sur Ctrl+C pour quitter)..."
    tail -f logs/*.log 2>/dev/null || echo "Aucun log trouv√©"
}

health_check() {
    echo "üè• V√©rification de sant√©..."
    curl -s http://localhost:3001/health || echo "‚ùå Serveur non accessible"
}

# Initialisation
check_dependencies

# Boucle principale
while true; do
    show_menu
    case $choice in
        1) start_node ;;
        2) start_bun ;;
        3) watch_mode ;;
        4) build_project ;;
        5) cleanup_project ;;
        6) show_logs ;;
        7) health_check ;;
        8) echo "üëã Au revoir !"; exit 0 ;;
        *) echo "‚ùå Option invalide" ;;
    esac
    echo ""
    read -p "Appuyez sur Entr√©e pour continuer..."
done
